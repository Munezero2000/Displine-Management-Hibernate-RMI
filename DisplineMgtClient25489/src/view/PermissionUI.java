package view;

import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import javax.swing.JOptionPane;
import model.Permission;
import model.Staff;
import model.Status;
import model.Student;
import service.PermissionService;
import service.StaffService;
import service.StudentService;
import com.itextpdf.text.Document;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Munezero
 */
public class PermissionUI extends javax.swing.JFrame {
    DefaultTableModel permissionsModel = new DefaultTableModel();
    /**
     * Creates new form PermissionUI
     */
    public PermissionUI() {
        if (Session.id == null) {
            this.dispose();
            return;
        }
        initComponents();
        addColumnsPermission();
        addRowsPermission();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        HomeBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        PermitStudBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        permitIdBox = new javax.swing.JTextField();
        StudSearchButton = new javax.swing.JButton();
        studNameBox = new javax.swing.JTextField();
        studLevelBox = new javax.swing.JTextField();
        permitReasonBox = new javax.swing.JTextField();
        permitDaysBox = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        HomeBtn1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        PermissionsTable = new javax.swing.JTable();

        HomeBtn.setBackground(new java.awt.Color(0, 102, 102));
        HomeBtn.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        HomeBtn.setForeground(new java.awt.Color(255, 255, 255));
        HomeBtn.setText("Go Home");
        HomeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeBtnActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(241, 253, 253));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setForeground(new java.awt.Color(0, 102, 102));

        jLabel1.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("Description");

        jLabel2.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("Days permitted");

        PermitStudBtn.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        PermitStudBtn.setForeground(new java.awt.Color(0, 102, 102));
        PermitStudBtn.setText("Permit Student");
        PermitStudBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PermitStudBtnActionPerformed(evt);
            }
        });

        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        StudSearchButton.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        StudSearchButton.setForeground(new java.awt.Color(0, 102, 102));
        StudSearchButton.setText("Search");
        StudSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudSearchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(studLevelBox)
                    .addComponent(studNameBox)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(StudSearchButton, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(permitIdBox, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(StudSearchButton, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(permitIdBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(studNameBox, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(studLevelBox, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        permitDaysBox.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        jLabel3.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 102));
        jLabel3.setText("PERMISSIONS PORTAL");

        HomeBtn1.setBackground(new java.awt.Color(0, 102, 102));
        HomeBtn1.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        HomeBtn1.setForeground(new java.awt.Color(255, 255, 255));
        HomeBtn1.setText("Go Home");
        HomeBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeBtn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(PermitStudBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
                            .addComponent(permitDaysBox)
                            .addComponent(permitReasonBox))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(HomeBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(149, 149, 149))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(HomeBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(permitReasonBox, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(permitDaysBox, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(PermitStudBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        PermissionsTable.setBackground(new java.awt.Color(241, 253, 253));
        PermissionsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(PermissionsTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    private Student getStudent(){
        try {
            Registry registry = LocateRegistry.getRegistry("127.0.0.1", 6000);
            StudentService service = (StudentService) registry.lookup("student");
            Student staff = new Student(Integer.parseInt(permitIdBox.getText()));
            Student st = service.searchStudent(staff);
            if (st != null) {
               return st;
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return null;
    }
    
    private Staff getStaff() {
        try {
            Registry registry = LocateRegistry.getRegistry("127.0.0.1", 6000);
            StaffService service = (StaffService) registry.lookup("staff");
            Staff staff = new Staff(Session.id);
            Staff st = service.searchStaff(staff);
            if (st != null) {
                return st;
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return null;
    }
    
    private void updateStudentStatus() {
        try {
            Registry registry = LocateRegistry.getRegistry("127.0.0.1", 6000);
            StudentService service = (StudentService) registry.lookup("student");
            Student stud = getStudent();
            stud.setStatus(Status.PERMITTED);
            Student st = service.updateStudent(stud);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    private void generatePDF(Student student, Permission perm) throws Exception {
        // Create a PDF document
        Document document = new Document();

        // Get the current date and time for the filename
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyyMMdd_HHmmss");
        String timestamp = dateFormat.format(new Date());

        // Customize the filename with date and time
        String pdfFileName = "Permit_" + timestamp + "_" + student.getStudentId() + ".pdf";

        // Set the path where you want to save the PDF
        String pdfFilePath = "C:\\Users\\Munezero\\Documents\\StudentsDocuments\\" + pdfFileName;  // Update the path

        PdfWriter.getInstance(document, new FileOutputStream(pdfFilePath));
        document.open();

        // Add content to the PDF
        document.add(new Paragraph("Indatwa n'Inkesha School (GSOB)"));
        document.add(new Paragraph("Phone: +2507888123123"));
        document.add(new Paragraph("Email: indatwa@gmail.com"));
        document.add(new Paragraph("P.O Box: 789 Kigali"));

        // Add empty lines for spacing
        document.add(new Paragraph("\n\n"));

        // Center-align the permit details
        Paragraph permitDetails = new Paragraph("Permit Details for Student: " + student.getStudentNames());
        // Line for signature
        permitDetails.setAlignment(Paragraph.ALIGN_CENTER);
        document.add(permitDetails);
        document.add(new Paragraph("___________________________________________________________________\n"));
        document.add(new Paragraph("Permit Days: " + perm.getDaysPermitted()));
        document.add(new Paragraph("Permit Reason: " + perm.getDescription()));

        document.add(new Paragraph("\n"));  // Add empty line for spacing

        // Signature section
        document.add(new Paragraph("_________________________"));  
        document.add(new Paragraph("Stamp and Signature"));  
        document.add(new Paragraph("Displine In Charge: " + perm.getInCharge().getFullNames()));
        // Close the document
        document.close();

        JOptionPane.showMessageDialog(this, "Permission has been generated: " + pdfFileName + "\n You can now print!");
    }
    
    private void PermitStudBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PermitStudBtnActionPerformed
        try {
            Student student = getStudent();
            if(student.getStatus() == Status.EXPELLED){
                JOptionPane.showMessageDialog(this, "Student is Expelled");
                return;
            }
            
            if (student.getStatus() == Status.PERMITTED) {
                JOptionPane.showMessageDialog(this, "Student is Already Permitted");
                return;
            }
            Registry registry = LocateRegistry.getRegistry("127.0.0.1", 6000);
            PermissionService service = (PermissionService) registry.lookup("permit");
            Permission perm = new Permission();
            perm.setDaysPermitted(Integer.parseInt(permitDaysBox.getText()));
            perm.setDescription(permitReasonBox.getText());
            perm.setDateDone(new Date());
            perm.setInCharge(getStaff());
            perm.setStudent(getStudent());
            perm.setStatus(Status.PERMITTED);
            //Update Student Status
            updateStudentStatus();
            Permission st = service.AddPermission(perm);
            if (st != null) {
                JOptionPane.showMessageDialog(this, "Student Permitted Successfully");
                generatePDF(student, perm);
            } else {
                JOptionPane.showMessageDialog(this, "Student not Permitted");
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_PermitStudBtnActionPerformed

    private void StudSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudSearchButtonActionPerformed
       Student student = getStudent();
       if(student != null){
           studNameBox.setText(student.getStudentNames());
           studLevelBox.setText(student.getStatus().toString());
       }
    }//GEN-LAST:event_StudSearchButtonActionPerformed

    private void HomeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeBtnActionPerformed
        this.dispose();
        HomeUI form = new HomeUI();
        form.setVisible(true);
    }//GEN-LAST:event_HomeBtnActionPerformed

    private void HomeBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeBtn1ActionPerformed
        this.dispose();
        HomeUI form = new HomeUI();
        form.setVisible(true);
    }//GEN-LAST:event_HomeBtn1ActionPerformed
    
    public void addColumnsPermission() {
        permissionsModel = new DefaultTableModel();
        permissionsModel.addColumn("ID");
        permissionsModel.addColumn("NAMES");
        permissionsModel.addColumn("CLASS");
        permissionsModel.addColumn("PERMITED ON");
        permissionsModel.addColumn("DAYS OF PERMISSION");
        PermissionsTable.setModel(permissionsModel);
    }
    
    public void addRowsPermission() {
        try {
            Registry registry = LocateRegistry.getRegistry("127.0.0.1", 6000);
            PermissionService service = (PermissionService) registry.lookup("permit");
            List<Permission> permissionList = service.getAllPermission();
            for(Permission perm : permissionList){
                permissionsModel.addRow(new Object[]{perm.getStudent().getStudentId(), perm.getStudent().getStudentNames(), perm.getStudent().getStudentClass().getLevelName(),perm.getDateDone(), perm.getDaysPermitted()});
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
       
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PermissionUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PermissionUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PermissionUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PermissionUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PermissionUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton HomeBtn;
    private javax.swing.JButton HomeBtn1;
    private javax.swing.JTable PermissionsTable;
    private javax.swing.JButton PermitStudBtn;
    private javax.swing.JButton StudSearchButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JFormattedTextField permitDaysBox;
    private javax.swing.JTextField permitIdBox;
    private javax.swing.JTextField permitReasonBox;
    private javax.swing.JTextField studLevelBox;
    private javax.swing.JTextField studNameBox;
    // End of variables declaration//GEN-END:variables
}
